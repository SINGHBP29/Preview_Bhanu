export const projectsData = [
    {
    id: 1,
    name: ' Chatbot',
    description: "Developed an AI-powered chatbot to automate institutional support with 95% accuracy, improving user engagement. Integrated OpenAI’s LLM API to emulate ChatGPT functionality, boosting daily active users by 25%. Built using RASA, NLP (NLTK), and Python, ensuring a seamless conversational experience. Integrated with WhatsApp and Telegram, reducing response time by 30% for faster and more efficient support.",
    tools: ["Rasa", "NLP", "Python", "LLM Model", "Telegram"],
    role: 'Deployment and Integration Lead',
    code: '',
    demo: '',
    // image: crefin,
},
{
    id: 2,
    name: 'Question & Answering Bot for Customer Service',
    description: 'Developed a customer service chatbot using Streamlit, Hugging Face, and LangChain to automate support interactions. Implemented a FAISS-based vector database for efficient knowledge retrieval, enhancing response accuracy.Optimized FAQ retrieval by leveraging OpenAI’s text embeddings, improving response relevance and ensuring faster, more accurate supportAn innovative agricultural solution that automates the transplanting of multiple vegetable types, increasing planting efficiency by 30%. Built with Arduino for control, App Inventor for a user-friendly interface, and integrated QR Code Scanner for accurate crop identification, it also uses WhatsApp API to send real-time notifications. This system combines automation with seamless communication to enhance productivity in farming operations.',
    tools: ["Streamlit", "Hugging Face", "LangChain", "FAISS-Based Vector Database", "OpenAI Text Embeddings"],
    role: 'Innovation Team Lead',
    code: '',
    demo: '',
    // image: travel,
},
{
    id: 3,
    name: 'Protein Analyser',
    description: 'Developed machine learning models to predict amino acid arrangements, enabling advanced biological sequence analysis. Implemented anomaly detection using a one-class algorithm, enhancing pattern recognition.Optimized prediction accuracy to 98% with the Random Forest algorithm, ensuring precise and reliable results for biological data analysishiksha Sanjeevani is a comprehensive mobile application aimed at reducing student dropout rates by streamlining attendance management and enhancing communication among students, teachers, and parents. The app features a smart attendance system, a BOT Store with interactive educational resources, real-time progress tracking, and parental controls for monitoring academic performance.',
    tools: ["One Class Algorithm","Python","Pandas","Numpy","Matplotlib","Random Forest Algorithm","Amino Acid Dataset"],
    code: '',
    role: 'Project Lead',
    demo: '',
    // image: realEstate,
},
{
    id: 4,
    name: 'AI Powered Code Reviewer',
    description: "Developed an AI-powered code analysis tool using Google Gemini AI, capable of identifying 80% of errors pre-deployment, improving code reliability.Built an interactive code editor using React, Weight, and Prism.js, enhancing code readability by 30%. Designed a responsive UI for a seamless and efficient user experience.I am currently working on a Sign Language Detection project aimed at bridging communication gaps for individuals with hearing impairments. This system leverages Python, OpenCV, and a Convolutional Neural Network (CNN) based on the Pre-Trained SSD MobileNet V2 architecture to recognize and interpret sign language gestures from video or image inputs.",
    tools: ['ReactJs', 'LLM Model', 'Node.js'],
    code: '',
    demo: '',
    // image: ayla,
},
{
    id: 5,
    name: 'Resume Analyser',
    description: "Developed an AI-powered Resume Analyzer to automate and enhance the recruitment process. Implemented machine learning algorithms to extract and analyze key skills, experience, and qualifications from resumes, ensuring accurate candidate profiling.Integrated NLP techniques and OpenAI’s LLM models to provide job recommendations, improving hiring efficiency. Designed an intuitive web-based interface for recruiters, enabling faster and more informed decision-makingDeveloped an AI-powered code analysis tool using Google Gemini AI, capable of identifying 80% of errors pre-deployment, improving code reliability.Built an interactive code editor using React, Weight, and Prism.js, enhancing code readability by 30%. Designed a responsive UI for a seamless and efficient user experience.I am currently working on a Sign Language Detection project aimed at bridging communication gaps for individuals with hearing impairments. This system leverages Python, OpenCV, and a Convolutional Neural Network (CNN) based on the Pre-Trained SSD MobileNet V2 architecture to recognize and interpret sign language gestures from video or image inputs.",
    tools: ['Python', 'Streamlit', 'pypdf2',"NLP","Machine Learning","Spacy"],
    code: '',
    demo: '',
    // image: ayla,
},
];
